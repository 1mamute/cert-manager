//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The cert-manager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	config "github.com/jetstack/cert-manager/internal/apis/config"
	v1alpha1 "github.com/jetstack/cert-manager/pkg/apis/config/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WebhookConfiguration)(nil), (*config.WebhookConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WebhookConfiguration_To_config_WebhookConfiguration(a.(*v1alpha1.WebhookConfiguration), b.(*config.WebhookConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.WebhookConfiguration)(nil), (*v1alpha1.WebhookConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_WebhookConfiguration_To_v1alpha1_WebhookConfiguration(a.(*config.WebhookConfiguration), b.(*v1alpha1.WebhookConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WebhookDynamicServingConfig)(nil), (*config.WebhookDynamicServingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig(a.(*v1alpha1.WebhookDynamicServingConfig), b.(*config.WebhookDynamicServingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.WebhookDynamicServingConfig)(nil), (*v1alpha1.WebhookDynamicServingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig(a.(*config.WebhookDynamicServingConfig), b.(*v1alpha1.WebhookDynamicServingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WebhookFilesystemServingConfig)(nil), (*config.WebhookFilesystemServingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig(a.(*v1alpha1.WebhookFilesystemServingConfig), b.(*config.WebhookFilesystemServingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.WebhookFilesystemServingConfig)(nil), (*v1alpha1.WebhookFilesystemServingConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig(a.(*config.WebhookFilesystemServingConfig), b.(*v1alpha1.WebhookFilesystemServingConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.WebhookTLSConfig)(nil), (*config.WebhookTLSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig(a.(*v1alpha1.WebhookTLSConfig), b.(*config.WebhookTLSConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.WebhookTLSConfig)(nil), (*v1alpha1.WebhookTLSConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig(a.(*config.WebhookTLSConfig), b.(*v1alpha1.WebhookTLSConfig), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_WebhookConfiguration_To_config_WebhookConfiguration(in *v1alpha1.WebhookConfiguration, out *config.WebhookConfiguration, s conversion.Scope) error {
	out.SecurePort = (*int)(unsafe.Pointer(in.SecurePort))
	out.HealthzPort = (*int)(unsafe.Pointer(in.HealthzPort))
	if err := Convert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig(&in.TLSConfig, &out.TLSConfig, s); err != nil {
		return err
	}
	out.KubeConfig = in.KubeConfig
	out.APIServerHost = in.APIServerHost
	return nil
}

// Convert_v1alpha1_WebhookConfiguration_To_config_WebhookConfiguration is an autogenerated conversion function.
func Convert_v1alpha1_WebhookConfiguration_To_config_WebhookConfiguration(in *v1alpha1.WebhookConfiguration, out *config.WebhookConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha1_WebhookConfiguration_To_config_WebhookConfiguration(in, out, s)
}

func autoConvert_config_WebhookConfiguration_To_v1alpha1_WebhookConfiguration(in *config.WebhookConfiguration, out *v1alpha1.WebhookConfiguration, s conversion.Scope) error {
	out.SecurePort = (*int)(unsafe.Pointer(in.SecurePort))
	out.HealthzPort = (*int)(unsafe.Pointer(in.HealthzPort))
	if err := Convert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig(&in.TLSConfig, &out.TLSConfig, s); err != nil {
		return err
	}
	out.KubeConfig = in.KubeConfig
	out.APIServerHost = in.APIServerHost
	return nil
}

// Convert_config_WebhookConfiguration_To_v1alpha1_WebhookConfiguration is an autogenerated conversion function.
func Convert_config_WebhookConfiguration_To_v1alpha1_WebhookConfiguration(in *config.WebhookConfiguration, out *v1alpha1.WebhookConfiguration, s conversion.Scope) error {
	return autoConvert_config_WebhookConfiguration_To_v1alpha1_WebhookConfiguration(in, out, s)
}

func autoConvert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig(in *v1alpha1.WebhookDynamicServingConfig, out *config.WebhookDynamicServingConfig, s conversion.Scope) error {
	out.SecretNamespace = in.SecretNamespace
	out.SecretName = in.SecretName
	out.DNSNames = *(*[]string)(unsafe.Pointer(&in.DNSNames))
	return nil
}

// Convert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig is an autogenerated conversion function.
func Convert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig(in *v1alpha1.WebhookDynamicServingConfig, out *config.WebhookDynamicServingConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig(in, out, s)
}

func autoConvert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig(in *config.WebhookDynamicServingConfig, out *v1alpha1.WebhookDynamicServingConfig, s conversion.Scope) error {
	out.SecretNamespace = in.SecretNamespace
	out.SecretName = in.SecretName
	out.DNSNames = *(*[]string)(unsafe.Pointer(&in.DNSNames))
	return nil
}

// Convert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig is an autogenerated conversion function.
func Convert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig(in *config.WebhookDynamicServingConfig, out *v1alpha1.WebhookDynamicServingConfig, s conversion.Scope) error {
	return autoConvert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig(in, out, s)
}

func autoConvert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig(in *v1alpha1.WebhookFilesystemServingConfig, out *config.WebhookFilesystemServingConfig, s conversion.Scope) error {
	out.CertFile = in.CertFile
	out.KeyFile = in.KeyFile
	return nil
}

// Convert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig is an autogenerated conversion function.
func Convert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig(in *v1alpha1.WebhookFilesystemServingConfig, out *config.WebhookFilesystemServingConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig(in, out, s)
}

func autoConvert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig(in *config.WebhookFilesystemServingConfig, out *v1alpha1.WebhookFilesystemServingConfig, s conversion.Scope) error {
	out.CertFile = in.CertFile
	out.KeyFile = in.KeyFile
	return nil
}

// Convert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig is an autogenerated conversion function.
func Convert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig(in *config.WebhookFilesystemServingConfig, out *v1alpha1.WebhookFilesystemServingConfig, s conversion.Scope) error {
	return autoConvert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig(in, out, s)
}

func autoConvert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig(in *v1alpha1.WebhookTLSConfig, out *config.WebhookTLSConfig, s conversion.Scope) error {
	out.CipherSuites = *(*[]string)(unsafe.Pointer(&in.CipherSuites))
	out.MinTLSVersion = in.MinTLSVersion
	if err := Convert_v1alpha1_WebhookFilesystemServingConfig_To_config_WebhookFilesystemServingConfig(&in.Filesystem, &out.Filesystem, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_WebhookDynamicServingConfig_To_config_WebhookDynamicServingConfig(&in.Dynamic, &out.Dynamic, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig is an autogenerated conversion function.
func Convert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig(in *v1alpha1.WebhookTLSConfig, out *config.WebhookTLSConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_WebhookTLSConfig_To_config_WebhookTLSConfig(in, out, s)
}

func autoConvert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig(in *config.WebhookTLSConfig, out *v1alpha1.WebhookTLSConfig, s conversion.Scope) error {
	out.CipherSuites = *(*[]string)(unsafe.Pointer(&in.CipherSuites))
	out.MinTLSVersion = in.MinTLSVersion
	if err := Convert_config_WebhookFilesystemServingConfig_To_v1alpha1_WebhookFilesystemServingConfig(&in.Filesystem, &out.Filesystem, s); err != nil {
		return err
	}
	if err := Convert_config_WebhookDynamicServingConfig_To_v1alpha1_WebhookDynamicServingConfig(&in.Dynamic, &out.Dynamic, s); err != nil {
		return err
	}
	return nil
}

// Convert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig is an autogenerated conversion function.
func Convert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig(in *config.WebhookTLSConfig, out *v1alpha1.WebhookTLSConfig, s conversion.Scope) error {
	return autoConvert_config_WebhookTLSConfig_To_v1alpha1_WebhookTLSConfig(in, out, s)
}
